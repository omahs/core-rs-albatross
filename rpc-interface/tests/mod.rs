use nimiq_hash::Blake2bHash;
use nimiq_rpc_interface::types::Block;

#[test]
fn it_can_deserialize_result_blocks() {
    let data = r#"{"Ok":{"hash":"49e016cad2474773a27c196b02c3e73147c4c7853eccbbb08ad52e9ebe07d202","size":315,"batch":90,"epoch":23,"version":1,"number":2872,"timestamp":1654872311288,"parentHash":"25321c0bc8802643f7aedfeee2fa0d47d9ff8c32f07c141802f633b238052a36","seed":"994da9fc4e0edb94c7e9329f2848817e9ffd64cdcdaffb42bddbef82a95f74a013d454d9acafe12f283309756224388d11a9aa78deedcc712824f70f2e7b8304b7707eb46f564e6414db56a63feddd54751aed94d734c51de9fbeca2f3fc520d","extraData":"","stateHash":"a3f9827a3bf99031a0d1117df82ad3c77c90e82fcd9cb3e9f3d61b730a14bef1","bodyHash":"11da6d1f761ddf9bdb4c9d6e5303ebd41f61858d0a5647a1a7bfe089bf921be9","historyHash":"e99ddef0a4e568d3ab11c6c31c649a1723330165297f7b75004c3c19344415a0","type":"micro","producer":{"slotNumber":444,"validator":"NQ20 TSB0 DFSM UH9C 15GQ GAGJ TTE4 D3MA 859E","publicKey":"8137f759a2c836228f082b16cecd713467538b3e16fb8f61bd3bd0647c3c6d2d8a9ded144da6f2d07544cccac1222d771d61a8e7197a1dd3567723d26681f96333ed0d04820534c99e4c05064c8d61a5b4ee32153dbdd9efaf5041f5a78d8c000263d28beb873c092940ce87611b455e408a7d32fff9d2fb8e76c28914d48245fe172786e3d7a09e7b4c0e25cd902a9c684673c6d84f2d4fc9aad2fa3c74e8fbb66e0ce62406e34bad214155f2884f444acdcb4b4e67d01533f72a13e42800744da4d37f54295a0a49543227a78f242ca730c2b9b5e5cdefcef43d60f4ddaf7d0ccfc6ac8067c6f8cf2b4491709b43359cb05b90b31be46e4ebc36e43e30dcbf0eabef1542743eeb53f9bd01e5344b8284d16bc3d5ed72612bfa7fd922"},"forkProofs":[],"justification": {"micro": "538337a7e514dbd7af44c879ed48b1d74e33e8cf93c6dcc141cc6f209f39b7b7a687a3ef49f8ce4ccbbe7d489d2cdbfd21c771cd65ab8f6d8f9341aad2b61008"}}}"#;
    let value = serde_json::from_str(data).unwrap();
    let _result: Result<Block, Blake2bHash> = serde_json::from_value(value).unwrap();
}
